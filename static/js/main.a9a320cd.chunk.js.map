{"version":3,"sources":["LessonList/LessonList.js","OneLesson/OneLesson.js","StandardList/StandardList.js","Forms/LoginForm.js","Forms/SignupForm.js","Nav/Nav.js","NewLesson/NewLesson.js","UpdateLesson/UpdateLesson.js","App/App.js","serviceWorker.js","index.js"],"names":["LessonList","state","listOfLessons","axios","get","then","res","console","log","data","setState","catch","error","lesson","this","map","lessonName","key","attributes","name","className","to","id","topic","grade","Component","OneLesson","lessonStandards","musicStandards","setLessonStandards","bind","deleteLesson","setRedirect","renderRedirect","props","match","params","relationships","standard_title","standards","delete","headers","redirect","length","i","standardId","filter","standard","push","dataInfo","heading","anchor_standard_number","anchor_standard_text","standard_text","lessonInfo","vocab","description","activities","accommodations","onClick","StandardList","item","standardList","standardName","LoginForm","username","password","handleChange","evt","target","value","prevstate","newState","onSubmit","handle_login","htmlFor","type","onChange","SignupForm","handle_signup","Nav","logged_out_nav","display_form","logged_in_nav","handle_logout","logged_in","NewLesson","materials","handleSubmit","addCheckbox","setRedirectToLessons","renderRedirectToLessons","preventDefault","boxValue","checked","post","body","JSON","stringify","err","title","pk","placeholder","UpdateLesson","standardArray","updatedName","updatedGrade","updatedTopic","updatedMaterials","updatedVocab","updatedDescription","updatedActivities","updatedAccommodations","updatedLessonStandards","updatedLesson","put","App","displayed_form","localStorage","getItem","Authorization","json","user","passCode","userLogin","token","setItem","newUser","newPassCode","newUserLogin","removeItem","form","path","exact","component","render","routerProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9a320cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import allLessons from './lessons.json';\nimport axios from 'axios';\n\nexport default class LessonList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            listOfLessons: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://corelessons.herokuapp.com/lessons/')\n            .then(res => {\n                console.log(res.data);\n                this.setState({ listOfLessons: res.data.data });\n                //might be res.data.data\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        let lesson = this.state.listOfLessons.map(lessonName => {\n            return (\n                <div key={lessonName.attributes.name}>\n                    <ul >\n                    <Link className=\"individual-lesson\" to={`/lesson/${lessonName.id}`} >{lessonName.attributes.name}:</Link>\n                        <li>A lesson on {lessonName.attributes.topic} for grade {lessonName.attributes.grade}.</li>\n                    </ul>\n                </div>\n            );\n        });\n        return <div>\n            <h1 className=\"heading\">Welcome to Crafting Core Lesson Plans</h1>\n            <h2 className=\"title-black\">Browse the list of lessons and click on the link to view the individual plan.</h2>\n            {lesson}\n        </div>\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from \"react-router-dom\";\n\nexport default class OneLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            lesson: [],\n            lessonStandards: [],\n            musicStandards: [],\n        };\n        this.setLessonStandards = this.setLessonStandards.bind(this);\n        this.deleteLesson = this.deleteLesson.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this);\n    }\n\n    componentDidMount() {\n        // backend call to access the individual lesson data model\n        axios.get(`https://corelessons.herokuapp.com/lesson/${this.props.match.params.id}`)\n            .then(res => {\n                // console.log(res.data.data);\n                console.log(res.data.data.relationships.standard_title.data);\n                this.setState(\n                    {\n                        lesson: res.data.data,\n                        lessonStandards: res.data.data.relationships.standard_title.data\n                    })\n            })\n            .then(() => {\n                // second backend call to access the music standards data model\n                axios.get(`https://corelessons.herokuapp.com/standards/`)\n                    .then(res => {\n                        // console.log(res.data.data);\n                        this.setState({musicStandards: res.data.data})\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    setLessonStandards(standards) {\n        this.setState({\n            musicStandards: standards\n        })\n        // console.log(evt.target.value)\n\n    }\n\n    deleteLesson() {\n        axios.delete(`https://corelessons.herokuapp.com/lesson/delete/${this.props.match.params.id}`,\n            {\n                headers:\n                    {\n                        'Content-Type': 'application/vnd.api+json'\n                    }\n            })\n            .then(res => {\n                this.setRedirect();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    setRedirect() {\n        this.setState({ redirect: true });\n    }\n\n    renderRedirect() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/lessons\" />;\n        }\n    }\n    render() {\n        let standards = [];\n        if (this.state.lessonStandards.length && this.state.musicStandards.length) {\n            for (let i = 0; i < this.state.lessonStandards.length; i++) {\n                let standardId = this.state.musicStandards.filter(standard => standard.id === this.state.lessonStandards[i].id);\n                // console.log(standardId);\n                console.log(standardId[0]);\n                standards.push(standardId[0]);\n            }\n        }\n\n        let dataInfo = [];\n        if (standards.length > 0) {\n            for (let i = 0; i < standards.length; i++) {\n                dataInfo.push(<div key={dataInfo}>\n                    <h4>{standards[i].attributes.heading} {standards[i].attributes.anchor_standard_number}: {standards[i].attributes.anchor_standard_text}\n                    </h4>\n                    <p className=\"title\">{standards[i].attributes.standard_title}: {standards[i].attributes.standard_text}</p>\n\n                </div>)\n            }\n        }\n        let lessonInfo = [];\n        if (this.state.lesson.attributes) {\n            lessonInfo = this.state.lesson.attributes;\n\n        }\n\n        console.log(lessonInfo);\n        console.log(dataInfo);\n        return (\n            <div key={this.state.lesson}>\n                {this.renderRedirect()}\n                <h2 className=\"title\">Lesson: {lessonInfo.name}, Grade {lessonInfo.grade} - {lessonInfo.topic}</h2>\n                <h3 className=\"title-black\">Standards</h3>\n                {dataInfo}\n                <h4 className=\"title-black\">Important Vocabulary:</h4> <p>{lessonInfo.vocab}</p>\n                <h4 className=\"title-black\">Description: </h4><p>{lessonInfo.description}</p>\n                <h4 className=\"title-black\"> Activities:</h4> <p>{lessonInfo.activities}</p>\n                <h4 className=\"title-black\"> Accommodations:</h4> <p> {lessonInfo.accommodations}</p>\n                <Link to={`/lesson/update/${this.props.match.params.id}`}>\n                    <button className=\"individual-lesson\">Update this Lesson</button>\n                </Link>\n                <Link to={`/lesson/delete/${this.props.match.params.id}`}>\n                    <button className=\"individual-lesson\" onClick={this.deleteLesson}>Delete this Lesson</button>\n                </Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport standardList from '../StandardList/standards.json';\n\nexport default class StandardList extends Component {\n    render() {\n        let item = standardList.map(standardName => {\n            return (\n                <div key={standardName.attributes.standard_title}>\n                    <h2 className=\"title\">Grade: {standardName.attributes.grade} - {standardName.attributes.heading}, {standardName.attributes.anchor_standard_number}</h2>\n                    <h3 >{standardName.attributes.anchor_standard_text}</h3>\n                    <h4 className='standard-name'>{standardName.attributes.standard_title}: {standardName.attributes.standard_text}</h4>\n                    <hr/>\n                </div>\n            );\n        });\n        return <div>\n            <h1 className=\"heading\">Browse the Illinois CCSS for Music</h1>\n            {item}\n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class LoginForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(evt) {\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n    render() {\n        return (\n            <form className=\"content\" onSubmit={evt => this.props.handle_login(evt, this.state)}>\n                <h4>Log In</h4>\n                <label className=\"title\" htmlFor='username'>Username</label>\n                <input className=\"box\" type='text' name='username' value={this.state.username} onChange={this.handleChange}/>\n                <label className=\"title\" htmlFor='password'>Password</label>\n                <input className=\"box\" type='password' name='password' value={this.state.password} onChange={this.handleChange}/>\n                <input onClick={this.handleChange} className=\"individual-lesson\" type='submit'/>\n            </form>\n        )\n    }\n}\n\nLoginForm.propTypes = {\n    handle_login: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SignupForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(evt) {\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n    render() {\n        return (\n            <form className=\"content\" onSubmit={evt => this.props.handle_signup(evt, this.state)}>\n                <h4>Sign Up</h4>\n                <label className=\"title\" htmlFor='username'>Username</label>\n                <input className=\"box\" type='text' name='username' value={this.state.username} onChange={this.handleChange}/>\n                <label className=\"title\" htmlFor='password'>Password</label>\n                <input className=\"box\" type='password' name='password' value={this.state.password} onChange={this.handleChange}/>\n                <input className=\"individual-lesson\"  type='submit'/>\n            </form>\n        )\n    }\n}\n\nSignupForm.propTypes = {\n    handle_signup: PropTypes.func.isRequired\n};\n","//source: https://medium.com/@dakota.lillie/django-react-jwt-authentication-5015ee00ef9a\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Nav(props) {\n    const logged_out_nav = (\n        <ul>\n            <li className=\"title\" onClick={() => props.display_form('login')}>Login</li>\n            <li className=\"title\" onClick={() => props.display_form('signup')}>Sign Up</li>\n        </ul>\n    );\n    const logged_in_nav = (\n        <ul>\n            <li onClick={props.handle_logout}>Logout</li>\n        </ul>\n    );\n    return <div>\n        {props.logged_in ? logged_in_nav : logged_out_nav}\n    </div>\n\n}\n\nexport default Nav;\n\nNav.propTypes = {\n    logged_in: PropTypes.bool.isRequired,\n    display_form: PropTypes.func.isRequired,\n    handle_logout: PropTypes.func.isRequired\n};\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\n\nexport default class NewLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            grade: '',\n            topic: '',\n            materials: '',\n            vocab: '',\n            description: '',\n            activities: '',\n            accommodations: '',\n            musicStandards: [],\n            standard_title: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addCheckbox = this.addCheckbox.bind(this);\n        this.setRedirectToLessons = this.setRedirectToLessons.bind(this);\n        this.renderRedirectToLessons = this.renderRedirectToLessons.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`https://corelessons.herokuapp.com/standards/`)\n            .then(res => {\n                // console.log(res.data.data);\n                this.setState({musicStandards: res.data.data})\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    addCheckbox(evt) {\n        evt.preventDefault();\n        let boxValue = evt.target.value;\n        let value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n        if (value) {\n            this.setState({\n                standard_title: [...this.state.standard_title, boxValue]\n            });\n\n        }\n        console.log(boxValue);\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        let newName = this.state.name;\n        let newGrade = this.state.grade;\n        let newTopic = this.state.topic;\n        let newMaterials = this.state.materials;\n        let newVocab = this.state.vocab;\n        let newDescription = this.state.description;\n        let newActivities = this.state.activities;\n        let newAccommodations = this.state.accommodations;\n        let lessonStandards = this.state.standard_title;\n\n        let lesson = {\n\n            data: {\n                type: \"Lesson\",\n                attributes: {\n                    name: newName,\n                    grade: newGrade,\n                    topic: newTopic,\n                    materials: newMaterials,\n                    vocab: newVocab,\n                    description: newDescription,\n                    activities: newActivities,\n                    accommodations: newAccommodations,\n                    standard_title: lessonStandards\n                }\n            }\n        };\n        axios.post(`https://corelessons.herokuapp.com/lessons/`,\n\n            lesson, {\n                headers: {\n                    'Content-Type': 'application/vnd.api+json'\n                },\n                body: JSON.stringify({data: lesson})\n            })\n            .then(res => {\n                console.log(res);\n                this.setRedirectToLessons();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    handleChange(evt) {\n        evt.preventDefault();\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = {...prevstate};\n            newState[name] = value;\n            return newState;\n        });\n        // console.log(this.state.name);\n    }\n    setRedirectToLessons() {\n        this.setState({ redirect: true });\n    }\n\n    renderRedirectToLessons() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/craftingCoreLessons/#/lessons\" />;\n        }\n    }\n    render() {\n        console.log(this.state);\n        console.log(this.state.standard_title);\n        let title = this.state.musicStandards.map(title => {\n            return (\n                <div key={'standards'}>\n                    <p className=\"text\">{title.attributes.standard_text}</p>\n                    <label className=\"title\" htmlFor='label'>{title.attributes.standard_title}\n                        <input  value={title.attributes.pk} name='label' type='checkbox'\n                               onClick={this.addCheckbox}/></label>\n                     <hr/>\n                </div>\n            )\n\n        });\n        return (\n            <div key={this.state}>\n                {this.renderRedirectToLessons()}\n                <form key={this.state.name}>\n                    <label className=\"title\" htmlFor='name'>Lesson Name </label>\n                    <input className=\"box\" onChange={this.handleChange} name='name' type=\"text\" placeholder=\"type lesson name\"\n                           value={this.state.name}/>\n                    <label className=\"title\" htmlFor='grade'>Grade Level </label>\n                    <input className=\"box\" onChange={this.handleChange} name='grade' type=\"text\" placeholder=\"grade\"\n                           value={this.state.grade}/>\n                    <label className=\"title\" htmlFor='topic'>Lesson Topic </label>\n                    <input className=\"box\" onChange={this.handleChange} name='topic' type=\"text\" placeholder=\"type topic\"\n                           value={this.state.topic}/>\n                    <label className=\"title\" htmlFor='materials'>Materials </label>\n                    <input className=\"box-medium\" onChange={this.handleChange} name='materials' type=\"text\" placeholder=\"list materials\"\n                           value={this.state.materials}/>\n                    <label className=\"title\" htmlFor='vocab'>Vocabulary </label>\n                    <input className=\"box-medium\" onChange={this.handleChange} name='vocab' type=\"text\" placeholder=\"list vocabulary\"\n                           value={this.state.vocab}/>\n                    <label className=\"title\" htmlFor='description'>Description </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='description' type=\"text\" placeholder=\"type description\"\n                           value={this.state.description}/>\n                    <label className=\"title\" htmlFor='activities'>Activities </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='activities' type=\"text\" placeholder=\"type activities\"\n                           value={this.state.activities}/>\n                    <label className=\"title\" htmlFor='accommodations'>Accommodations </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='accommodations' type=\"text\"\n                           placeholder=\"list accommodations\" value={this.state.accommodations}/>\n                    <label className=\"title\"> Choose Standards </label>\n                    {title}\n                    <button className=\"individual-lesson\" onClick={this.handleSubmit} type=\"submit\">Submit</button>\n\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nexport default class UpdateLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            grade: '',\n            topic: '',\n            materials: '',\n            vocab: '',\n            description: '',\n            activities: '',\n            accommodations: '',\n            musicStandards: [],\n            standard_title: []\n\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addCheckbox = this.addCheckbox.bind(this);\n        this.setRedirectToLessons = this.setRedirectToLessons.bind(this);\n        this.renderRedirectToLessons = this.renderRedirectToLessons.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`https://corelessons.herokuapp.com/standards/`)\n            .then(res => {\n                // console.log(res.data.data);\n                this.setState({musicStandards: res.data.data})\n            })\n            .then(() => {\n                axios.get(`https://corelessons.herokuapp.com/lesson/${this.props.match.params.id}`)\n                    .then(res => {\n                        console.log(res.data.data);\n                        this.setState({\n                            name: res.data.data.attributes.name,\n                            grade: res.data.data.attributes.grade,\n                            topic: res.data.data.attributes.topic,\n                            materials: res.data.data.attributes.materials,\n                            vocab: res.data.data.attributes.vocab,\n                            description: res.data.data.attributes.description,\n                            activities: res.data.data.attributes.activities,\n                            accommodations: res.data.data.attributes.accommodations,\n                            standard_title: res.data.data.relationships.standard_title\n\n                        })\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n    setRedirectToLessons() {\n        this.setState({ redirect: true });\n    }\n\n    renderRedirectToLessons() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/lessons\" />;\n        }\n    }\n    addCheckbox(evt) {\n        evt.preventDefault();\n        let boxValue = evt.target.value;\n        let value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n        let standardArray = [];\n        // console.log(\"Hello World\", checkedBox);\n        for (let i = 0; i < this.state.standard_title.length; i++) {\n            if (this.state.standard_title[i]) {\n                standardArray.push(this.state.standard_title[i]);\n            }\n        }\n\n        if (value) {\n            this.setState({\n                standard_title: [...standardArray, boxValue]\n            }, () => {\n\n            }\n            );\n        }\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        let updatedName = this.state.name;\n        let updatedGrade = this.state.grade;\n        let updatedTopic = this.state.topic;\n        let updatedMaterials = this.state.materials;\n        let updatedVocab = this.state.vocab;\n        let updatedDescription = this.state.description;\n        let updatedActivities = this.state.activities;\n        let updatedAccommodations = this.state.accommodations;\n        let updatedLessonStandards = this.state.standard_title;\n\n        let updatedLesson = {\n\n            data: {\n                type: \"Lesson\",\n                id: `${this.props.match.params.id}`,\n                attributes: {\n                    name: updatedName,\n                    grade: updatedGrade,\n                    topic: updatedTopic,\n                    materials: updatedMaterials,\n                    vocab: updatedVocab,\n                    description: updatedDescription,\n                    activities: updatedActivities,\n                    accommodations: updatedAccommodations,\n                    standard_title: updatedLessonStandards\n                }\n            }\n        };\n        console.log(updatedLesson);\n        axios.put(`https://corelessons.herokuapp.com/lesson/update/${this.props.match.params.id}`,\n\n            updatedLesson, {\n                headers: {\n                    'Content-Type': 'application/vnd.api+json'\n                },\n                body: JSON.stringify({data: updatedLesson})\n            })\n            .then(res => {\n                    console.log(res);\n                    this.setRedirectToLessons();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    handleChange(evt) {\n        evt.preventDefault();\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = {...prevstate};\n            newState[name] = value;\n            return newState;\n        });\n        // console.log(this.state.name);\n    }\n\n    render() {\n        console.log(this.state);\n        console.log(this.state.standard_title);\n        let title = this.state.musicStandards.map(title => {\n            return (\n                <div>\n                    <p className=\"text\">{title.attributes.standard_text}</p>\n                    <label htmlFor='label'>{title.attributes.standard_title}\n                        <input value={title.attributes.pk} name='label' type='checkbox'\n                               onClick={this.addCheckbox}/></label>\n                    <hr/>\n                </div>\n            )\n\n        });\n        return (\n            <div>\n                {this.renderRedirectToLessons()}\n                <form>\n                    <label className=\"title\" htmlFor='name'>Lesson Name </label>\n                    <input className=\"box\"  onChange={this.handleChange} name='name' type=\"text\" placeholder=\"type lesson name\"\n                           value={this.state.name}/>\n                    <label className=\"title\" htmlFor='grade'>Grade Level </label>\n                    <input className=\"box\"  onChange={this.handleChange} name='grade' type=\"text\" placeholder=\"grade\"\n                           value={this.state.grade}/>\n                    <label className=\"title\" htmlFor='topic'>Lesson Topic </label>\n                    <input className=\"box\"  onChange={this.handleChange} name='topic' type=\"text\" placeholder=\"type topic\"\n                           value={this.state.topic}/>\n                    <label className=\"title\" htmlFor='materials'>Materials </label>\n                    <input className=\"box-medium\" onChange={this.handleChange} name='materials' type=\"text\" placeholder=\"list materials\"\n                           value={this.state.materials}/>\n                    <label className=\"title\" htmlFor='vocab'>Vocabulary </label>\n                    <input className=\"box-medium\" onChange={this.handleChange} name='vocab' type=\"text\" placeholder=\"list vocabulary\"\n                           value={this.state.vocab}/>\n                    <label className=\"title\" htmlFor='description'>Description </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='description' type=\"text\" placeholder=\"type description\"\n                           value={this.state.description}/>\n                    <label className=\"title\" htmlFor='activities'>Activities </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='activities' type=\"text\" placeholder=\"type activities\"\n                           value={this.state.activities}/>\n                    <label className=\"title\" htmlFor='accommodations'>Accommodations </label>\n                    <input className=\"box-large\" onChange={this.handleChange} name='accommodations' type=\"text\"\n                           placeholder=\"list accommodations\" value={this.state.accommodations}/>\n                    <label className=\"title\"> Choose Standards </label>\n                    {title}\n                    <button className=\"individual-lesson\" onClick={this.handleSubmit} type=\"submit\">Submit</button>\n\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport './App.css';\nimport LessonList from '../LessonList/LessonList';\nimport OneLesson from '../OneLesson/OneLesson';\nimport StandardList from \"../StandardList/StandardList\";\nimport LoginForm from \"../Forms/LoginForm\";\nimport SignupForm from \"../Forms/SignupForm\";\nimport Nav from '../Nav/Nav';\nimport NewLesson from \"../NewLesson/NewLesson\";\nimport UpdateLesson from \"../UpdateLesson/UpdateLesson\";\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayed_form: '',\n            logged_in: !!localStorage.getItem('token'),\n            username: '',\n            password: ''\n        };\n        this.handle_login = this.handle_login.bind(this);\n        this.handle_signup = this.handle_signup.bind(this);\n        this.handle_logout = this.handle_logout.bind(this);\n        this.display_form = this.display_form.bind(this);\n    }\n\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            axios.get('https://corelessons.herokuapp.com/core/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                },\n            })\n                .then(res => res.json())\n                .then(json => {\n                    console.log(json);\n                    this.setState({ username: json.data.user.username });\n                });\n        }\n    }\n\n    handle_login(evt, data) {\n        evt.preventDefault();\n\n        console.log(data.username);\n        let user = data.username;\n        let passCode = data.password;\n\n        let userLogin = {\n            data: {\n                type: \"ObtainJSONWebToken\",\n                attributes: {\n                    username: user,\n                    password: passCode\n                }\n            }\n        };\n        axios.post('https://corelessons.herokuapp.com/token-auth/',\n            userLogin, {\n                headers: {\n                    'Content-Type': 'application/vnd.api+json'\n                },\n                body: JSON.stringify({userLogin})\n            })\n            .then(res => console.log(res.data.data.token))\n            .then(res => {\n                localStorage.setItem('token', res);\n                this.setState({\n                    logged_in: true,\n                    displayed_form: '',\n                    username: user,\n                    password: passCode\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handle_signup(evt, data) {\n        evt.preventDefault();\n        console.log(data.username);\n        let newUser = data.username;\n        let newPassCode = data.password;\n\n        let newUserLogin = {\n            data: {\n                type: \"ObtainJSONWebToken\",\n                attributes: {\n                    username: newUser,\n                    password: newPassCode\n                }\n            }\n        };\n        axios.post('https://corelessons.herokuapp.com/core/users/',\n            newUserLogin, {\n            headers: {\n                'Content-Type': 'application/vnd.api+json'\n            },\n            body: JSON.stringify({newUserLogin})\n        })\n            .then(res => console.log(res.data))\n            .then(res => {\n                localStorage.setItem('token', res);\n                this.setState({\n                    logged_in: true,\n                    displayed_form: '',\n                    username: newUser,\n                    password: newPassCode\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    handle_logout() {\n        localStorage.removeItem('token');\n        this.setState({ logged_in: false, username: '' });\n    }\n\n    display_form(form) {\n        this.setState({\n            displayed_form: form\n        });\n    }\n\n    render() {\n        let form;\n            switch (this.state.displayed_form) {\n                case 'login':\n                    form = < LoginForm handle_login={this.handle_login} />;\n                    break;\n                case 'signup':\n                    form = <SignupForm handle_signup={this.handle_signup} />;\n                    break;\n                default:\n                    form = null;\n            }\n\n        return (\n            <div className=\"behind\">\n\n                <header >\n                    <nav>\n                        <Link to=\"/lessons\"> Lesson List </Link>\n                      <Link to=\"/standards\"> All Standards </Link>\n                        <Link to=\"/lesson/new\"> New Lesson Plan </Link>\n                    </nav>\n\n                </header>\n                <main>\n                    <div className=\"content\" >\n                        <div className=\"login\">\n                    <Nav logged_in={this.state.logged_in}\n                         display_form={this.display_form}\n                         handle_logout={this.handle_logout}/>\n                    {form}\n                    <h4 >\n                        {this.state.logged_in ? `Hey there, ${this.state.username}`\n                            : 'Please Log In' }\n                    </h4>\n                        </div>\n                    <Switch>\n                        <Route path=\"/lesson/new\" exact={true} component={NewLesson} />\n                        <Route path=\"/lesson/update/:id\" exact={true} render={routerProps => <UpdateLesson match={routerProps.match} /> } />\n                        <Route path=\"/lessons\" exact={true} component={LessonList}/>\n                        <Route path=\"/standards\" exact={true} component={StandardList}/>\n                        <Route path=\"/lesson/:id\" exact={true} render={routerProps => <OneLesson match={routerProps.match}/>}/>\n                    </Switch>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n// import {\n//     BrowserRouter as Router\n// } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n    <App />\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}