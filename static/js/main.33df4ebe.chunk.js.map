{"version":3,"sources":["LessonList/LessonList.js","OneLesson/OneLesson.js","StandardList/StandardList.js","Forms/LoginForm.js","Forms/SignupForm.js","Nav/Nav.js","NewLesson/NewLesson.js","UpdateLesson/UpdateLesson.js","App/App.js","serviceWorker.js","index.js"],"names":["LessonList","state","listOfLessons","axios","get","then","res","console","log","data","setState","catch","error","lesson","this","map","lessonName","key","attributes","name","to","id","topic","grade","Component","OneLesson","lessonStandards","musicStandards","setLessonStandards","bind","deleteLesson","props","match","params","relationships","standard_title","standards","delete","headers","length","i","standardId","filter","standard","push","dataInfo","heading","anchor_standard_number","anchor_standard_text","standard_text","lessonInfo","vocab","description","activities","accommodations","onClick","StandardList","item","standardList","standardName","LoginForm","username","password","handleChange","evt","target","value","prevstate","newState","onSubmit","handle_login","htmlFor","type","onChange","SignupForm","handle_signup","Nav","logged_out_nav","display_form","logged_in_nav","handle_logout","logged_in","NewLesson","materials","handleSubmit","addCheckbox","preventDefault","boxValue","checked","post","body","JSON","stringify","err","title","pk","placeholder","UpdateLesson","standardArray","updatedName","updatedGrade","updatedTopic","updatedMaterials","updatedVocab","updatedDescription","updatedActivities","updatedAccommodations","updatedLessonStandards","updatedLesson","put","App","displayed_form","localStorage","getItem","fetch","Authorization","json","user","method","token","setItem","removeItem","form","className","path","exact","component","render","routerProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33df4ebe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import allLessons from './lessons.json';\nimport axios from 'axios';\n\nexport default class LessonList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            listOfLessons: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://corelessons.herokuapp.com/lessons/')\n            .then(res => {\n                console.log(res.data);\n                this.setState({ listOfLessons: res.data.data });\n                //might be res.data.data\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        let lesson = this.state.listOfLessons.map(lessonName => {\n            return (\n                <div key={lessonName.attributes.name}>\n                    <ul>\n                    <Link to={`/lesson/${lessonName.id}`}>{lessonName.attributes.name}:</Link>\n                        <li>A lesson on {lessonName.attributes.topic} for grade {lessonName.attributes.grade}.</li>\n                    </ul>\n                </div>\n            );\n        });\n        return <div>\n            <h2>Lessons</h2>\n            {lesson}\n        </div>\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from \"react-router-dom\";\n\nexport default class OneLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            lesson: [],\n            lessonStandards: [],\n            musicStandards: [],\n        };\n        this.setLessonStandards = this.setLessonStandards.bind(this);\n        this.deleteLesson = this.deleteLesson.bind(this);\n        // this.setRedirect = this.setRedirect.bind(this);\n        // this.renderRedirect = this.renderRedirect.bind(this);\n    }\n\n    componentDidMount() {\n        // backend call to access the individual lesson data model\n        axios.get(`https://corelessons.herokuapp.com/lesson/${this.props.match.params.id}`)\n            .then(res => {\n                // console.log(res.data.data);\n                console.log(res.data.data.relationships.standard_title.data);\n                this.setState(\n                    {\n                        lesson: res.data.data,\n                        lessonStandards: res.data.data.relationships.standard_title.data\n                    })\n            })\n            .then(() => {\n                // second backend call to access the music standards data model\n                axios.get(`https://corelessons.herokuapp.com/standards/`)\n                    .then(res => {\n                        // console.log(res.data.data);\n                        this.setState({musicStandards: res.data.data})\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    setLessonStandards(standards) {\n        this.setState({\n            musicStandards: standards\n        })\n        // console.log(evt.target.value)\n\n    }\n\n    deleteLesson() {\n        axios.delete(`https://corelessons.herokuapp.com/lesson/delete/${this.props.match.params.id}`,\n            {\n                headers:\n                    {\n                        'Content-Type': 'application/vnd.api+json'\n                    }\n            })\n            .then(res => {\n                // this.setRedirect();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    // setRedirect() {\n    //     this.setState({ redirect: true });\n    // }\n    //\n    // renderRedirect() {\n    //     if (this.state.redirect) {\n    //         return <Redirect to=\"http://localhost:3000/lessons\" />;\n    //     }\n    // }\n    render() {\n        // console.log(this.state);\n        //  let chosenLesson = allLessons.find(lesson => lesson.id === this.props.match.params.id);\n        // // console.log(chosenLesson.relationships.standard_title.data[0]);\n        let standards = [];\n        if (this.state.lessonStandards.length && this.state.musicStandards.length) {\n            for (let i = 0; i < this.state.lessonStandards.length; i++) {\n                let standardId = this.state.musicStandards.filter(standard => standard.id === this.state.lessonStandards[i].id);\n                // console.log(standardId);\n                console.log(standardId[0]);\n                standards.push(standardId[0]);\n            }\n        }\n\n        let dataInfo = [];\n        if (standards.length > 0) {\n            for (let i = 0; i < standards.length; i++) {\n                dataInfo.push(<div key={dataInfo}>\n                    <h4>{standards[i].attributes.heading} {standards[i].attributes.anchor_standard_number}: {standards[i].attributes.anchor_standard_text}\n                    </h4>\n                    <p>{standards[i].attributes.standard_title}: {standards[i].attributes.standard_text}</p>\n\n                </div>)\n            }\n        }\n        let lessonInfo = [];\n        if (this.state.lesson.attributes) {\n            lessonInfo = this.state.lesson.attributes;\n\n        }\n        // console.log(this.state.lesson.attributes);\n        console.log(lessonInfo);\n        console.log(dataInfo);\n        return (\n            <div key={this.state.lesson}>\n                {/*{this.renderRedirect()}*/}\n                <h2>Lesson: {lessonInfo.name}, Grade {lessonInfo.grade} - {lessonInfo.topic}</h2>\n                <h3>Standards</h3>\n                {dataInfo}\n                <h4>Important Vocabulary: {lessonInfo.vocab}</h4>\n                <p>Description: {lessonInfo.description}</p>\n                <p>Activities: {lessonInfo.activities}</p>\n                <p>Accommodations: {lessonInfo.accommodations}</p>\n                <Link to={`/lesson/update/${this.props.match.params.id}`}>\n                    <button>Update this Lesson</button>\n                </Link>\n                <Link to={`/lesson/delete/${this.props.match.params.id}`}>\n                    <button onClick={this.deleteLesson}>Delete this Lesson</button>\n                </Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport standardList from '../StandardList/standards.json';\n\nexport default class StandardList extends Component {\n    render() {\n        let item = standardList.map(standardName => {\n            return (\n                <div key={standardName.attributes.standard_title}>\n                    <h2>Grade: {standardName.attributes.grade} - {standardName.attributes.heading}, {standardName.attributes.anchor_standard_number}</h2>\n                    <h3>{standardName.attributes.anchor_standard_text}</h3>\n                    <h4>{standardName.attributes.standard_title}: {standardName.attributes.standard_text}</h4>\n                </div>\n            );\n        });\n        return <div>\n            <h1>Browse the Illinois CCSS for Music</h1>\n            {item}\n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class LoginForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(evt) {\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n    render() {\n        return (\n            <form onSubmit={evt => this.props.handle_login(evt, this.state)}>\n                <h4>Log In</h4>\n                <label htmlFor='username'>Username</label>\n                <input type='text' name='username' value={this.state.username} onChange={this.handleChange}/>\n                <label htmlFor='password'>Password</label>\n                <input type='password' name='password' value={this.state.password} onChange={this.handleChange}/>\n                <input type='submit'/>\n            </form>\n        )\n    }\n}\n\nLoginForm.propTypes = {\n    handle_login: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SignupForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(evt) {\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n    render() {\n        return (\n            <form onSubmit={evt => this.props.handle_signup(evt, this.state)}>\n                <h4>Sign Up</h4>\n                <label htmlFor='username'>Username</label>\n                <input type='text' name='username' value={this.state.username} onChange={this.handleChange}/>\n                <label htmlFor='password'>Password</label>\n                <input type='password' name='password' value={this.state.password} onChange={this.handleChange}/>\n                <input type='submit'/>\n            </form>\n        )\n    }\n}\n\nSignupForm.propTypes = {\n    handle_signup: PropTypes.func.isRequired\n};\n","//source: https://medium.com/@dakota.lillie/django-react-jwt-authentication-5015ee00ef9a\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Nav(props) {\n    const logged_out_nav = (\n        <ul>\n            <li onClick={() => props.display_form('login')}>Login</li>\n            <li onClick={() => props.display_form('signup')}>Sign Up</li>\n        </ul>\n    );\n    const logged_in_nav = (\n        <ul>\n            <li onClick={props.handle_logout}>Logout</li>\n        </ul>\n    );\n    return <div>\n        {props.logged_in ? logged_in_nav : logged_out_nav}\n    </div>\n\n}\n\nexport default Nav;\n\nNav.propTypes = {\n    logged_in: PropTypes.bool.isRequired,\n    display_form: PropTypes.func.isRequired,\n    handle_logout: PropTypes.func.isRequired\n};\n","import React, {Component} from 'react';\nimport axios from 'axios';\n// import Checkbox from \"../Checkbox/Checkbox\";\n\n\nexport default class NewLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            grade: '',\n            topic: '',\n            materials: '',\n            vocab: '',\n            description: '',\n            activities: '',\n            accommodations: '',\n            musicStandards: [],\n            standard_title: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addCheckbox = this.addCheckbox.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`https://corelessons.herokuapp.com/standards/`)\n            .then(res => {\n                // console.log(res.data.data);\n                this.setState({musicStandards: res.data.data})\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    addCheckbox(evt) {\n        evt.preventDefault();\n        let boxValue = evt.target.value;\n        let value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n        if (value) {\n            this.setState({\n                standard_title: [...this.state.standard_title, boxValue]\n            });\n\n        }\n        console.log(boxValue);\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        let newName = this.state.name;\n        let newGrade = this.state.grade;\n        let newTopic = this.state.topic;\n        let newMaterials = this.state.materials;\n        let newVocab = this.state.vocab;\n        let newDescription = this.state.description;\n        let newActivities = this.state.activities;\n        let newAccommodations = this.state.accommodations;\n        let lessonStandards = this.state.standard_title;\n\n        let lesson = {\n\n            data: {\n                type: \"Lesson\",\n                attributes: {\n                    name: newName,\n                    grade: newGrade,\n                    topic: newTopic,\n                    materials: newMaterials,\n                    vocab: newVocab,\n                    description: newDescription,\n                    activities: newActivities,\n                    accommodations: newAccommodations,\n                    standard_title: lessonStandards\n                }\n            }\n        };\n        axios.post(`https://corelessons.herokuapp.com/lessons/`,\n\n            lesson, {\n\n                headers: {\n                    // 'Accept': 'application/vnd.api+json',\n                    'Content-Type': 'application/vnd.api+json'\n                },\n                body: JSON.stringify({data: lesson})\n            })\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    handleChange(evt) {\n        evt.preventDefault();\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = {...prevstate};\n            newState[name] = value;\n            return newState;\n        });\n        // console.log(this.state.name);\n    }\n\n    render() {\n        console.log(this.state);\n        console.log(this.state.standard_title);\n        let title = this.state.musicStandards.map(title => {\n            return (\n                <div>\n                    <label htmlFor='label'>{title.attributes.standard_title}\n                        <input value={title.attributes.pk} name='label' type='checkbox'\n                               onClick={this.addCheckbox}/></label>\n                </div>\n            )\n\n        });\n        return (\n            <div>\n                {/*{this.renderRedirect()}*/}\n                <form>\n                    <label htmlFor='name'>Lesson Name </label>\n                    <input onChange={this.handleChange} name='name' type=\"text\" placeholder=\"type lesson name\"\n                           value={this.state.name}/>\n                    <label htmlFor='grade'>Grade Level </label>\n                    <input onChange={this.handleChange} name='grade' type=\"text\" placeholder=\"grade\"\n                           value={this.state.grade}/>\n                    <label htmlFor='topic'>Lesson Topic </label>\n                    <input onChange={this.handleChange} name='topic' type=\"text\" placeholder=\"type topic\"\n                           value={this.state.topic}/>\n                    <label htmlFor='materials'>Materials </label>\n                    <input onChange={this.handleChange} name='materials' type=\"text\" placeholder=\"list materials\"\n                           value={this.state.materials}/>\n                    <label htmlFor='vocab'>Vocabulary </label>\n                    <input onChange={this.handleChange} name='vocab' type=\"text\" placeholder=\"list vocabulary\"\n                           value={this.state.vocab}/>\n                    <label htmlFor='description'>Description </label>\n                    <input onChange={this.handleChange} name='description' type=\"text\" placeholder=\"type description\"\n                           value={this.state.description}/>\n                    <label htmlFor='activities'>Activities </label>\n                    <input onChange={this.handleChange} name='activities' type=\"text\" placeholder=\"type activities\"\n                           value={this.state.activities}/>\n                    <label htmlFor='accommodations'>Accommodations </label>\n                    <input onChange={this.handleChange} name='accommodations' type=\"text\"\n                           placeholder=\"list accommodations\" value={this.state.accommodations}/>\n                    <label> Choose Standards </label>\n                    {title}\n                    <button onClick={this.handleSubmit} type=\"submit\">Submit</button>\n\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nexport default class UpdateLesson extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            grade: '',\n            topic: '',\n            materials: '',\n            vocab: '',\n            description: '',\n            activities: '',\n            accommodations: '',\n            musicStandards: [],\n            standard_title: []\n\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addCheckbox = this.addCheckbox.bind(this);\n        // this.setRedirectToLessons = this.setRedirectToLessons.bind(this);\n        // this.renderRedirectToLessons = this.renderRedirectToLessons.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`https://corelessons.herokuapp.com/standards/`)\n            .then(res => {\n                // console.log(res.data.data);\n                this.setState({musicStandards: res.data.data})\n            })\n            .then(() => {\n                axios.get(`https://corelessons.herokuapp.com/lesson/${this.props.match.params.id}`)\n                    .then(res => {\n                        console.log(res.data.data);\n                        this.setState({\n                            name: res.data.data.attributes.name,\n                            grade: res.data.data.attributes.grade,\n                            topic: res.data.data.attributes.topic,\n                            materials: res.data.data.attributes.materials,\n                            vocab: res.data.data.attributes.vocab,\n                            description: res.data.data.attributes.description,\n                            activities: res.data.data.attributes.activities,\n                            accommodations: res.data.data.attributes.accommodations,\n                            standard_title: res.data.data.relationships.standard_title\n\n                        })\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n    // setRedirectToLessons() {\n    //     this.setState({ redirect: true });\n    // }\n    //\n    // renderRedirectToLessons() {\n    //     if (this.state.redirect) {\n    //         return <Redirect to=\"lessons\" />;\n    //     }\n    // }\n    addCheckbox(evt) {\n        evt.preventDefault();\n        let boxValue = evt.target.value;\n        let value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n        let standardArray = [];\n        // console.log(\"Hello World\", checkedBox);\n        for (let i = 0; i < this.state.standard_title.length; i++) {\n            if (this.state.standard_title[i]) {\n                standardArray.push(this.state.standard_title[i]);\n            }\n        }\n\n        if (value) {\n            this.setState({\n                standard_title: [...standardArray, boxValue]\n            }, () => {\n\n            }\n            );\n        }\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        let updatedName = this.state.name;\n        let updatedGrade = this.state.grade;\n        let updatedTopic = this.state.topic;\n        let updatedMaterials = this.state.materials;\n        let updatedVocab = this.state.vocab;\n        let updatedDescription = this.state.description;\n        let updatedActivities = this.state.activities;\n        let updatedAccommodations = this.state.accommodations;\n        let updatedLessonStandards = this.state.standard_title;\n\n        let updatedLesson = {\n\n            data: {\n                type: \"Lesson\",\n                id: `${this.props.match.params.id}`,\n                attributes: {\n                    name: updatedName,\n                    grade: updatedGrade,\n                    topic: updatedTopic,\n                    materials: updatedMaterials,\n                    vocab: updatedVocab,\n                    description: updatedDescription,\n                    activities: updatedActivities,\n                    accommodations: updatedAccommodations,\n                    standard_title: updatedLessonStandards\n                }\n            }\n        };\n        console.log(updatedLesson);\n        axios.put(`https://corelessons.herokuapp.com/lesson/update/${this.props.match.params.id}`,\n\n            updatedLesson, {\n                headers: {\n                    'Content-Type': 'application/vnd.api+json'\n                },\n                body: JSON.stringify({data: updatedLesson})\n            })\n            .then(res => {\n                // this.setRedirectToLessons();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    handleChange(evt) {\n        evt.preventDefault();\n        let name = evt.target.name;\n        let value = evt.target.value;\n        this.setState(prevstate => {\n            let newState = {...prevstate};\n            newState[name] = value;\n            return newState;\n        });\n        // console.log(this.state.name);\n    }\n\n    render() {\n        console.log(this.state);\n        console.log(this.state.standard_title);\n        let title = this.state.musicStandards.map(title => {\n            return (\n                <div>\n                    <label htmlFor='label'>{title.attributes.standard_title}\n                        <input value={title.attributes.pk} name='label' type='checkbox'\n                               onClick={this.addCheckbox}/></label>\n                </div>\n            )\n\n        });\n        return (\n            <div>\n                {/*{this.renderRedirectToLessons()}*/}\n                <form>\n                    <label htmlFor='name'>Lesson Name </label>\n                    <input onChange={this.handleChange} name='name' type=\"text\" placeholder=\"type lesson name\"\n                           value={this.state.name}/>\n                    <label htmlFor='grade'>Grade Level </label>\n                    <input onChange={this.handleChange} name='grade' type=\"text\" placeholder=\"grade\"\n                           value={this.state.grade}/>\n                    <label htmlFor='topic'>Lesson Topic </label>\n                    <input onChange={this.handleChange} name='topic' type=\"text\" placeholder=\"type topic\"\n                           value={this.state.topic}/>\n                    <label htmlFor='materials'>Materials </label>\n                    <input onChange={this.handleChange} name='materials' type=\"text\" placeholder=\"list materials\"\n                           value={this.state.materials}/>\n                    <label htmlFor='vocab'>Vocabulary </label>\n                    <input onChange={this.handleChange} name='vocab' type=\"text\" placeholder=\"list vocabulary\"\n                           value={this.state.vocab}/>\n                    <label htmlFor='description'>Description </label>\n                    <input onChange={this.handleChange} name='description' type=\"text\" placeholder=\"type description\"\n                           value={this.state.description}/>\n                    <label htmlFor='activities'>Activities </label>\n                    <input onChange={this.handleChange} name='activities' type=\"text\" placeholder=\"type activities\"\n                           value={this.state.activities}/>\n                    <label htmlFor='accommodations'>Accommodations </label>\n                    <input onChange={this.handleChange} name='accommodations' type=\"text\"\n                           placeholder=\"list accommodations\" value={this.state.accommodations}/>\n                    <label> Choose Standards </label>\n                    {title}\n                    <button onClick={this.handleSubmit} type=\"submit\">Submit</button>\n\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport './App.css';\nimport LessonList from '../LessonList/LessonList';\nimport OneLesson from '../OneLesson/OneLesson';\nimport StandardList from \"../StandardList/StandardList\";\nimport LoginForm from \"../Forms/LoginForm\";\nimport SignupForm from \"../Forms/SignupForm\";\nimport Nav from '../Nav/Nav';\nimport NewLesson from \"../NewLesson/NewLesson\";\nimport UpdateLesson from \"../UpdateLesson/UpdateLesson\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayed_form: '',\n            logged_in: !!localStorage.getItem('token'),\n            username: ''\n        };\n        this.handle_login = this.handle_login.bind(this);\n        this.handle_signup = this.handle_signup.bind(this);\n        this.handle_logout = this.handle_logout.bind(this);\n        this.display_form = this.display_form.bind(this);\n    }\n\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            fetch('https://core.herokuapp.com/core/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => res.json())\n                .then(json => {\n                    console.log(json);\n                    this.setState({ username: json.data.user.username });\n                });\n        }\n    }\n\n    handle_login(evt, data) {\n        evt.preventDefault();\n        fetch('https://core.herokuapp.com/token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/vnd.api+json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n             .then(res => console.log(res))\n            .then(json => {\n                console.log(json.token);\n                localStorage.setItem('token', json.token);\n                this.setState({\n                    logged_in: true,\n                    displayed_form: '',\n                    username: json.user.username\n                });\n\n            })\n    }\n\n    handle_signup(evt, data) {\n        evt.preventDefault();\n        fetch('https://corelessons.herokuapp.com/core/users/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/vnd.api+json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.data.token);\n                this.setState({\n                    logged_in: true,\n                    displayed_form: '',\n                    username: json.username\n                });\n            })\n    }\n    handle_logout() {\n        localStorage.removeItem('token');\n        this.setState({ logged_in: false, username: '' });\n    }\n\n    display_form(form) {\n        this.setState({\n            displayed_form: form\n        });\n    }\n\n    render() {\n        let form;\n            switch (this.state.displayed_form) {\n                case 'login':\n                    form = <LoginForm handle_login={this.handle_login} />;\n                    break;\n                case 'signup':\n                    form = <SignupForm handle_signup={this.handle_signup} />\n                    break;\n                default:\n                    form = null;\n            }\n\n        return (\n            <div className='background'>\n\n                <header >\n                    <nav>\n                        <Link to=\"/lessons\"> Lesson List </Link>\n                      <Link to=\"/standards\"> All Standards </Link>\n                        <Link to=\"/lesson/new\"> New Lesson Plan </Link>\n                    </nav>\n\n                </header>\n                <main>\n                    <div className=\"content\">\n                    <Nav logged_in={this.state.logged_in}\n                         display_form={this.display_form}\n                         handle_logout={this.handle_logout}/>\n                    {form}\n                    <h3>\n                        {this.state.logged_in ? `Hey there, ${this.state.username}`\n                            : 'Please Log In' }\n                    </h3>\n                    <Switch>\n                        <Route path=\"/lesson/new\" exact={true} component={NewLesson} />\n                        <Route path=\"/lesson/update/:id\" exact={true} render={routerProps => <UpdateLesson match={routerProps.match} /> } />\n                        <Route path=\"/lessons\" exact={true} component={LessonList}/>\n                        <Route path=\"/standards\" exact={true} component={StandardList}/>\n                        <Route path=\"/lesson/:id\" exact={true} render={routerProps => <OneLesson match={routerProps.match}/>}/>\n                    </Switch>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n// import {\n//     BrowserRouter as Router\n// } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n    <App />\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}